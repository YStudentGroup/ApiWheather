name: Deploy Infrastructure + App to GCP

on:
  push:
    branches:
      - main

jobs:
  terraform-and-deploy:
    runs-on: ubuntu-latest
    env:
      VM_IP: 35.241.239.77

    defaults:
      run:
        working-directory: terraform  # Exécuter dans dossier

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create terraform directory (in case it doesn't exist)
        run: mkdir -p .

      - name: Setup Google Cloud auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Generate SSH key
        run: |
          ssh-keygen -t rsa -b 4096 -f temp-ssh-key -N ""
          echo "SSH_PRIVATE_KEY<<EOF" >> $GITHUB_ENV
          cat temp-ssh-key >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "SSH_PUBLIC_KEY=$(cat temp-ssh-key.pub)" >> $GITHUB_ENV

      - name: Inject SSH public key in VM with Terraform
        working-directory: terraform
        run: |
          echo "public_ssh_key = \"${SSH_PUBLIC_KEY}\"" > temp-auto.tfvars

      - name: Déployer application Node/Mongo sur VM
        run: |
          echo "$SSH_PRIVATE_KEY" > temp-ssh-key.pem
          chmod 600 temp-ssh-key.pem
          
          echo "Connexion SSH à la VM pour déploiement..."
          ssh -o StrictHostKeyChecking=no -i temp-ssh-key.pem ubuntu@$VM_IP << 'EOF'
            set -e
            
            echo "Arrêt des conteneurs existants (si présents)..."
            cd /home/ubuntu/API 2>/dev/null && docker compose down || echo "Pas de conteneur à arrêter"

            echo "Suppression du dossier existant..."
            rm -rf /home/ubuntu/API

            echo "Clonage du projet depuis GitHub..."
            git clone https://github.com/YStudentGroup/ApiWheather.git /home/ubuntu/API

            echo "Création du fichier .env..."
            echo "MONGO_URI=mongodb://localhost:27017" > /home/ubuntu/API/.env

            echo "Vérification de docker-compose..."
            if ! command -v docker-compose &> /dev/null; then
              echo "docker-compose introuvable, installation manuelle..."
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-\$(uname -s)-\$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            echo "Build et lancement des conteneurs Docker..."
            cd /home/ubuntu/API
            docker compose build
            docker compose up -d
          EOF

      - name: Check and install Docker on VM
        run: |
          echo "$SSH_PRIVATE_KEY" > temp-ssh-key.pem
          chmod 600 temp-ssh-key.pem
          echo "Checking/Installing Docker on $VM_IP..."
          ssh -o StrictHostKeyChecking=no -i temp-ssh-key.pem ubuntu@$VM_IP << EOF
            if ! command -v docker &> /dev/null
            then
              echo "Docker not found. Installing..."
              sudo apt-get update
              sudo apt-get install -y ca-certificates curl gnupg
              sudo install -m 0755 -d /etc/apt/keyrings
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
              sudo chmod a+r /etc/apt/keyrings/docker.gpg
              echo \
                "deb [arch=\$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
                \$(. /etc/os-release && echo \"\$VERSION_CODENAME\") stable" | \
                sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
              sudo apt-get update
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
              sudo usermod -aG docker ubuntu
              echo "Docker installed successfully."
            else
              echo "Docker is already installed."
            fi
          EOF
